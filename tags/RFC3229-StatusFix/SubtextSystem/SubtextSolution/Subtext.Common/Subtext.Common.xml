<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Subtext.Common</name>
    </assembly>
    <members>
        <member name="T:Subtext.Common.Data.Cacher">
            <summary>
            Summary description for Cacher.
            </summary>
        </member>
        <member name="T:Subtext.Common.Data.Transformer">
            <summary>
            Common .Text object transformations
            </summary>
        </member>
        <member name="M:Subtext.Common.Data.Transformer.BuildLinks(System.String,Subtext.Framework.Components.CategoryType,Subtext.Framework.Format.UrlFormats)">
            <summary>
            Converts a LinkCategoryCollection into a single LinkCategory with its own LinkCollection.
            </summary>
            <param name="Title">Title for the LinkCategory</param>
            <param name="catType">Type of Categories to transform</param>
            <param name="formats">Determines how the Urls are formated</param>
            <returns></returns>
        </member>
        <member name="M:Subtext.Common.Data.Transformer.BuildMonthLinks(System.String,Subtext.Framework.Format.UrlFormats)">
            <summary>
            Will convert ArchiveCountCollection method from Archives.GetPostsByMonthArchive()
            into a LinkCategory. LinkCategory is a common item to databind to a web control.
            </summary>
            <param name="Title">Title for the Category</param>
            <param name="formats">Determines how the Urls are formated</param>
            <returns>A LinkCategory object with a Link (via LinkCollection) for each month in ArchiveCountCollection</returns>
        </member>
        <member name="T:Subtext.Common.Syndication.AtomHandler">
            <summary>
            Summary description for RssHandler.
            </summary>
        </member>
        <member name="P:Subtext.Common.Syndication.AtomHandler.SyndicationWriter">
            <summary>
            Gets the syndication writer.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Subtext.Common.Syndication.AtomWriter">
            <summary>
            Generates RSS
            </summary>
        </member>
        <member name="M:Subtext.Common.Syndication.AtomWriter.#ctor(Subtext.Framework.Components.EntryCollection,System.Int32)">
            <summary>
            Creates a new <see cref="T:Subtext.Common.Syndication.AtomWriter"/> instance.
            </summary>
            <param name="entries">Entries.</param>
            <param name="lastViewedFeedItem">Last viewed feed item.</param>
        </member>
        <member name="T:Subtext.Common.Syndication.CategoryWriter">
            <summary>
            Summary description for CategoryWriter.
            </summary>
        </member>
        <member name="T:Subtext.Common.Syndication.RssWriter">
            <summary>
            Generates RSS
            </summary>
        </member>
        <member name="M:Subtext.Common.Syndication.RssWriter.#ctor(Subtext.Framework.Components.EntryCollection,System.Int32)">
            <summary>
            Creates a new <see cref="T:Subtext.Common.Syndication.RssWriter"/> instance.
            </summary>
            <param name="entries">Entries.</param>
        </member>
        <member name="T:Subtext.Common.Syndication.CommentHandler">
            <summary>
            Implementation of http://wellformedweb.org/story/9
            Accepts a posted XML document via HttpPost.
            </summary>
        </member>
        <member name="T:Subtext.Common.Syndication.CommentRssWriter">
            <summary>
            Generates CommentRssWriter 
            </summary>
        </member>
        <member name="M:Subtext.Common.Syndication.CommentRssWriter.#ctor(Subtext.Framework.Components.EntryCollection,Subtext.Framework.Components.Entry)">
            <summary>
            Creates a new <see cref="T:Subtext.Common.Syndication.CommentRssWriter"/> instance.
            </summary>
            <param name="ec">Ec.</param>
            <param name="ce">Ce.</param>
        </member>
        <member name="T:Subtext.Common.Syndication.EntryCollectionHandler">
            <summary>
            </summary>
        </member>
        <member name="T:Subtext.Common.Syndication.RssCategoryHandler">
            <summary>
            RssCommentHandler is a proposed extention to the CommentApi. This is still beta/etc.
            The Main Rss feed now contains an element for each entry, which will generate a rss feed 
            containing the comments for each post.
            </summary>
        </member>
        <member name="T:Subtext.Common.Syndication.RssCommentHandler">
            <summary>
            RssCommentHandler is a proposed extention to the CommentApi. This is still beta/etc.
            The Main Rss feed now contains an element for each entry, which will generate a rss feed 
            containing the comments for each post.
            </summary>
        </member>
        <member name="T:Subtext.Common.Syndication.RssHandler">
            <summary>
            Class used to handle requests for an RSS feed.
            </summary>
        </member>
        <member name="M:Subtext.Common.Syndication.RssHandler.CacheKey(System.Int32)">
            <summary>
            Returns the cache key for the feed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Subtext.Common.Syndication.RssHandler.Cache(Subtext.Framework.Syndication.CachedFeed)">
            <summary>
            Caches the specified RSS feed.
            </summary>
            <param name="feed">Feed.</param>
        </member>
        <member name="P:Subtext.Common.Syndication.RssHandler.SyndicationWriter">
            <summary>
            Gets the syndication writer.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Subtext.Common.UrlManager.HandlerConfiguration">
            <summary>
            Configuration class for the HandlerConfiguration section of 
            the web.config file.
            </summary>
        </member>
        <member name="M:Subtext.Common.UrlManager.HandlerConfiguration.SetControls(System.Web.HttpContext,System.String[])">
            <summary>
            Sets the controls.
            </summary>
            <param name="context">Context.</param>
            <param name="controls">Controls.</param>
        </member>
        <member name="M:Subtext.Common.UrlManager.HandlerConfiguration.GetControls(System.Web.HttpContext)">
            <summary>
            Gets the controls associated to the specified context.
            </summary>
            <param name="context">Context.</param>
        </member>
        <member name="M:Subtext.Common.UrlManager.HandlerConfiguration.Instance">
            <summary>
            returns an instance of the HandlerConfiguration from 
            the configuration settings.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Subtext.Common.UrlManager.HandlerConfiguration.HttpHandlers">
            <summary>
            Gets or sets the HTTP handlers configured in the HttpHandlers section.
            </summary>
            <value></value>
        </member>
        <member name="P:Subtext.Common.UrlManager.HandlerConfiguration.DefaultPageLocation">
            <summary>
            Gets or sets the defualt page location.
            </summary>
            <value></value>
        </member>
        <member name="P:Subtext.Common.UrlManager.HandlerConfiguration.FullPageLocation">
            <summary>
            Gets the full page location.
            </summary>
            <value></value>
        </member>
        <member name="T:Subtext.Common.UrlManager.HttpHandler">
            <summary>
            Class used to match URLS to the controls that render the URL.
            </summary>
        </member>
        <member name="M:Subtext.Common.UrlManager.HttpHandler.IsMatch(System.String)">
            <summary>
            Returns true if the regex matches the specified URL.
            </summary>
            <param name="url">URL.</param>
            <returns></returns>
        </member>
        <member name="P:Subtext.Common.UrlManager.HttpHandler.PageLocation">
            <summary>
            <p>Gets or sets the page location.  This is the location 
            of the page used when the handler type is <see cref="!:HandlerType.Page"/>. 
            </p>
            <p>
            The format for the page location should be a path relative to 
            the ApplicationPath (no beginning slash).
            </p>
            </summary>
            <example>
            If Subtext is installed in a virtual directory name "Subtext.Web" and 
            the virtual path to the page is "/Subtext.Web/SomeDirectory/MyPage.aspx", 
            the PageLocation should be "SomeDirectory/MyPage.aspx".
            </example>
            <value></value>
        </member>
        <member name="P:Subtext.Common.UrlManager.HttpHandler.DirectoryLocation">
            <summary>
            <p>Gets or sets the actual directory location.  This is the location 
            of the directory used to find the actual file when the handler type 
            is <see cref="!:HandlerType.Page"/>. 
            </p>
            <p>
            The format for the directory location should be a path relative to 
            the ApplicationPath (no beginning slash).
            </p>
            </summary>
            <example>
            <p>If Subtext is installed in a virtual directory name "Subtext.Web" and 
            the virtual path to the directory is "/Subtext.Web/Admin/", 
            the PageLocation should be "Admin".
            </p>
            <p>
            Thus requests for http://host/Subtext.Web/MyBlog/Admin/SomePage.aspx 
            will be handled by http://host/Subtext.Web/Admin/SomePage.aspx
            </p>
            </example>
            <value></value>
        </member>
        <member name="P:Subtext.Common.UrlManager.HttpHandler.FullPageLocation">
            <summary>
            Gets the full physical path to the page specified 
            by <see cref="P:Subtext.Common.UrlManager.HttpHandler.PageLocation"/>.
            </summary>
            <value></value>
        </member>
        <member name="T:Subtext.Common.UrlManager.PageHandlerFactory">
            <summary>
            System.Web.UI.PageHandlerFactory is internal. We need the option to load our own 
            classes with this for the virtual mapping.  With the virtual mapping default 
            documents will not be loaded. if no page is found, we will use attempt to load 
            default.aspx in the current directory
            </summary>
        </member>
        <member name="T:Subtext.Common.UrlManager.UrlReWriteHandlerFactory">
            <summary>
            Class responisble for figuring out which Subtext page to load. 
            By default will load an array of Subtext.UrlManager.HttpHandlder 
            from the blog.config file. This contains a list of Regex patterns 
            to match the current request to. It also allows caching of the 
            Regex's and Types.
            </summary>
        </member>
        <member name="M:Subtext.Common.UrlManager.UrlReWriteHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)">
            <summary>
            Implementation of IHttpHandlerFactory. By default, it will load an array 
            of <see cref="T:Subtext.Common.UrlManager.HttpHandler"/>s from the blog.config. This can be changed, 
            by overrideing the GetHttpHandlers(HttpContext context) method. 
            </summary>
            <param name="context">Current HttpContext</param>
            <param name="requestType">Request Type (Passed along to other IHttpHandlerFactory's)</param>
            <param name="url">The current requested url. (Passed along to other IHttpHandlerFactory's)</param>
            <param name="path">The physical path of the current request. Is not guaranteed 
            to exist (Passed along to other IHttpHandlerFactory's)</param>
            <returns>
            Returns an Instance of IHttpHandler either by loading an instance of IHttpHandler 
            or by returning an other 
            IHttpHandlerFactory.GetHandlder(HttpContext context, string requestType, string url, string path) 
            method
            </returns>
        </member>
        <member name="M:Subtext.Common.UrlManager.UrlReWriteHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)">
            <summary>
            Releases the handler.
            </summary>
            <param name="handler">Handler.</param>
        </member>
    </members>
</doc>
