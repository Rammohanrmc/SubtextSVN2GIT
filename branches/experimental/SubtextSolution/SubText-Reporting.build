<?xml version="1.0" encoding="utf-8" ?>
<project xmlns="http://nant.sf.net/schemas/nant.xsd" name="SubText-Reporting">

	<property name="nant.settings.currentframework" value="net-2.0"/>
	<property name="nant.onsuccess" value="OnSuccess" />
	
		<target name="get-publishing-properties">
	
		<if test="${not property::exists('CCNetArtifactDirectory')}"> 
			<fail message="CCNetArtifactDirectory property not set, so can't create distribution files" />
		</if>

		<if test="${not property::exists('CCNetWorkingDirectory')}"> 
			<fail message="CCNetWorkingDirectory property not set, so can't create distribution files" />
		</if>

		<if test="${not property::exists('CCNetLabel')}"> 
			<fail message="CCNetLabel property not set, so can't create distribution files" />
		</if>
		
		<if test="${not property::exists('msbuild.exe')}">
			<property name="msbuild.exe" value="C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\MSBuild.exe" />
		</if>

		<property name="solution.dir" value="${CCNetWorkingDirectory}\SubtextSolution" />
		<property name="buildtools.dir" value="${CCNetWorkingDirectory}\BuildTools" />
		<property name="subtext.web.bin" value="${solution.dir}\Subtext.Web\bin" />

		<!-- Directory for hosting images for specific builds -->
		<property name="artifacts.assets.dir" value="${CCNetArtifactDirectory}\buildlogs\${CCNetLabel}"/>
		
		<property name="log.dir" value="${CCNetWorkingDirectory}\logs" />


		<property name="publish.dir.ndoc" value="..\Docs"/>
		<property name="publish.workingdir.ndoc" value="..\Docs\workingdir" />
		<property name="publish.dir.latest" value="${CCNetArtifactDirectory}\builds\latest" />
		
		<property name="fileLabel" value="SubText-${CCNetLabel}" />
		
		<property name="docs.root.dir" value="${CCNetWorkingDirectory}\Docs" />
		<property name="ndoc.output.dir" value="${docs.root.dir}\NDoc" />
		
		<loadtasks path="${buildtools.dir}\NAnt\tasks" failonerror="false" />
	</target>
	
	
	<target name="code.metrics" depends="get-publishing-properties">
		<!-- Uses the pre-existing logs folder -->

		<!--	Put NDepend config xml into a working output directory, 
				since NDepend will output to the same directory as directory 
				used for input.									-->
		<copy todir="${log.dir}" file="${ndepend.config}" failonerror="false" verbose="true" />

		<!-- Set the path to our temporary file -->
		<property name="ndepend.input" value="${log.dir}\NDependProject.xml" />

		<!-- Change the value of the target bin directory to point to the output of the build
         (copied binaries to output.dir in a previous task). -->
		<xmlpoke file="${ndepend.input}" xpath="/NDepend/Dirs/Dir" value="${subtext.web.bin}" />
		
		<!-- Change the value of the directory for the NDepend output. -->
		<xmlpoke file="${ndepend.input}" xpath="/NDepend/OutputDir" value="${log.dir}" />

		<!-- Run NDepend Executable -->
		<exec program="${ndepend.exe}" 
			workingdir="${log.dir}" 
			commandline='"${ndepend.input}" /OutDir "${log.dir}"'
			failonerror="false" 
			timeout="1000000" 
			verbose="true" />

		<!-- Copy images generated by NDepend to artifacts directory -->
		<mkdir dir="${artifacts.assets.dir}" />

		<copy todir="${artifacts.assets.dir}" failonerror="false">
			<fileset basedir="${log.dir}">
				<include name="*.png" />
				<include name="*.jpg" />
				<include name="*.png" />
			</fileset>
		</copy>
	</target>
	
	
	<!--
		Compiles Subtext using the "documentation" configuration. 
		This configuration is the same as DEBUG but it outputs 
		documentation XML files.
	-->
	<target name="compile-docs">
		<property name="configuration" value="documentation"/>
		<call target="compile" />
	</target>
	
	<target name="compile" depends="get-publishing-properties">
		<exec program="${msbuild.exe}">
			<arg value="SubtextSolution.sln"/>
			<arg value="/nologo"/>
			<arg value="/verbosity:normal"/>
			<arg value="/t:Build"/>
			<arg value="/p:Configuration=${configuration}"/>
		</exec>
	</target>
	
	<target name="dist.publish.ndoc" depends="compile-docs">
		<mkdir dir="${publish.workingdir.ndoc}" />

		<echo message="deploying binaries to ndoc working folder" />

		<copy todir="${publish.workingdir.ndoc}" includeemptydirs="false">
			<fileset basedir="Subtext.Web">
				<include name="bin/*.xml" />
				<include name="bin/*.dll" />
			</fileset>
		</copy>
	</target>
	
	<target name="ndoc" depends="dist.publish.ndoc">
		<property name="ndoc.file.name" value="CodeDocumentation" />

		<echo message="Building xml comment files in ${publish.dir.latest}" />

		<ndoc verbose="true">
			<assemblies basedir="${publish.workingdir.ndoc}\bin">
				
				<include name="Subtext.Framework.dll" />


			</assemblies>
			<documenters>
				<documenter name="MSDN">
					<property name="OutputDirectory" value="${publish.workingdir.ndoc}" />
					<property name="HtmlHelpName" value="${ndoc.file.name}" />
					<property name="HtmlHelpCompilerFilename" value="hhc.exe" />
					<property name="Title" value="Subtext Code Documentation" />
					<property name="CopyrightText" value="Copyright 2005-2006 Phil Haack" />
					<property name="CopyrightHref" value="" />
					<property name="UseNamespaceDocSummaries" value="True" />
				</documenter>
			</documenters>
		</ndoc>

		<copy file="${publish.workingdir.ndoc}\${ndoc.file.name}.chm" todir="${publish.dir.ndoc}" />
		<delete dir="${publish.workingdir.ndoc}" />
	</target>
	
	
	<target name="OnSuccess">
		<echo file="${log.dir}\buildinfo.xml" append="false" failonerror="false">
			<![CDATA[<buildproject>${CCNetProject}</buildproject><buildlabel>${CCNetLabel}</buildlabel>]]>
		</echo>
	</target>
</project>