<?xml version="1.0" encoding="utf-8" ?>
<project xmlns="http://nant.sf.net/schemas/nant.xsd" name="SubText">
	
	<property name="nant.settings.currentframework" value="net-2.0"/>
	
	<target name="get-publishing-properties">
	
		<if test="${not property::exists('CCNetBuildDate')}"> 
			<fail message="CCNetBuildDate property not set, so can't create distribution files" />
		</if>	

		<if test="${not property::exists('CCNetBuildTime')}"> 
			<fail message="CCNetBuildTime property not set, so can't create distribution files" />
		</if>
		
		<if test="${not property::exists('CCNetArtifactDirectory')}"> 
			<fail message="CCNetArtifactDirectory property not set, so can't create distribution files" />
		</if>

		<if test="${not property::exists('CCNetWorkingDirectory')}"> 
			<fail message="CCNetWorkingDirectory property not set, so can't create distribution files" />
		</if>

		<if test="${not property::exists('CCNetLabel')}"> 
			<fail message="CCNetLabel property not set, so can't create distribution files" />
		</if>

		<if test="${not property::exists('MbUnit.exe')}"> 
			<fail message="MbUnit.exe property not set, so cannot test" />
		</if>

		<if test="${not property::exists('NCover.exe')}"> 
			<fail message="NCover.exe property not set, so cannot test" />
		</if>
		
		<if test="${not property::exists('fxcop.exe')}"> 
			<fail message="fxcop.exe property not set, so cannot test" />
		</if>
		
		<if test="${not property::exists('ncoverexplorer.exe')}"> 
			<fail message="ncoverexplorer.exe property not set, so cannot test" />
		</if>
	
		<if test="${not property::exists('msbuild.exe')}"> 
			<fail message="msbuild.exe property not set, so cannot test" />
		</if>
			
		<property name="log.dir" value="${CCNetWorkingDirectory}\logs" />

		<property name="publish.dir.ndoc" value="${CCNetArtifactDirectory}\builds\ndoc" />
		<property name="publish.dir.latest" value="${CCNetArtifactDirectory}\builds\latest" />
		<property name="publish.dir.archive" value="${CCNetArtifactDirectory}\builds\archive" />
		
		<property name="fileLabel" value="SubText-${CCNetLabel}" />
		
		<property name="docs.root.dir" value="${CCNetWorkingDirectory}\Docs" />
		<property name="ndoc.output.dir" value="${docs.root.dir}\NDoc" />
	</target>

	
	<!-- //TODO: Consider checking in this file after update the version -->
	<target name="version" depends="get-publishing-properties">
		<asminfo output="VersionInfo.Designer.cs" language="CSharp">
			<imports>
				<import namespace="System" />
				<import namespace="System.Reflection" />
			</imports>
			<attributes>
				<attribute type="AssemblyVersionAttribute" value="${CCNetLabel}" />
			</attributes>
		</asminfo>
	</target>

	
	<target name="clean" depends="get-publishing-properties">
		<delete dir="${log.dir}" failonerror="false" />
		<call target="clean-vs" />
	</target>

	
	<target name="clean-vs">
		<foreach item="Folder" property="foldername">
			<in>
				<items basedir=".">
					<include name="*\bin" />
					<include name="*\obj" />
				</items>
			</in>
			<do>
				<delete dir="${foldername}" />
			</do>
		</foreach>
		<mkdir dir="Subtext.Web\bin" />
	</target>

	<!--
		Compiles Subtext using the "documentation" configuration. 
		This configuration is the same as DEBUG but it outputs 
		documentation XML files.
	-->
	<target name="compile-debug" depends="clean, version">
		<property name="configuration" value="debug"/>
		<call target="compile" />
	</target>

	
	<target name="compile-release" depends="clean, version">
		<property name="configuration" value="release"/>
		<call target="compile" />
	</target>

	
	<target name="compile">
		<exec program="${msbuild.exe}">
			<arg value="SubtextSolution.sln"/>
			<arg value="/nologo"/>
			<arg value="/verbosity:normal"/>
			<arg value="/t:Build"/>
			<arg value="/p:Configuration=${configuration}"/>
		</exec>
	</target>


	<!-- 
		Compiles Subtext and runs the MbUnit tests and NCover reports.
	-->
	<target name="testAndCover" depends="get-publishing-properties,compile-debug">
		<exec program="${NCover.exe}" workingdir="UnitTests.Subtext\bin\${configuration}" commandline="&quot;${MbUnit.exe}&quot; /rnf:unittest /rt:xml /rf:${log.dir} UnitTests.Subtext.dll //x ${log.dir}\ncover-temp.xml" failonerror="true"/>
		<call target="util.ncoverexplorer.nant" />	
	</target>
	
	
	<target name="reporting" depends="compile-debug">
		<exec program="${fxcop.exe}" 
			commandline="/p:SubtextCodeAnalysis.FxCop /o:${log.dir}\ccnet-fxcop.xml" failonerror="false"/>
	</target>

	
	<target name="util.ncoverexplorer.nant">
		<echo message="Starting NCoverExplorer report generation..."/>

		<!-- Other attributes that can be used on ncoverexplorer element:               -->
		<!--   failMinimum="True" would fail the build if minimum coverage not met.     -->
		<!-- Remove the xmlReportName and/or htmlReportName attributes to not generate. -->
		<!-- Report types are 1=Module, 2=Namespace, 3=Namespace/Module.                -->
		<!-- Valid exclusion 'type' attributes are 'Assembly', 'Namespace' and 'Class'. -->
		<ncoverexplorer program="${ncoverexplorer.exe}"
						projectName="SubText"
						reportType="3"
						outputDir="${log.dir}" 
						xmlReportName="ncover.xml"
						showExcluded="True" >
			<fileset>
				<include name="${log.dir}\ncover-temp.xml"/>
			</fileset>
		</ncoverexplorer>
	</target>

	
	<target name="release" depends="dist.archive">
		<echo message="CI Run for build number ${CCNetLabel} successfully completed" />
	</target>

	
	<target name="dist.publish.latest" depends="compile-release">
		<mkdir dir="${publish.dir.latest}" />
		
		<echo message="deploying binaries to latest" />
		
		<copy todir="${publish.dir.latest}" includeemptydirs="false">
			<fileset basedir="Subtext.Web">
				<include name="**/*" />
				<exclude name="**/*.bmp" />
				<exclude name="ExternalDependencies/*" />
				<exclude name="**/*.cs"/>
				<exclude name="**/*.txt"/>
				<exclude name="**/*.resx"/>
				<exclude name="bin/*.xml"/>
				<exclude name="**/*.csproj"/>
				<exclude name="**/*.csproj.user"/>
				<exclude name="**/.cvsignore"/>
				<exclude name="obj/**"/>
			</fileset>
		</copy>
		
		<copy todir="${publish.dir.latest}" includeemptydirs="false">
			<fileset basedir="Subtext.Web">
				<include name="emoticons.txt" />
			</fileset>
		</copy>
		
		<attrib readonly="false" >
			<fileset basedir="${publish.dir.latest}">
				<include name="**/*" />
			</fileset>
		</attrib>
	</target>

	
	<target name="dist.publish.ndoc" depends="testAndCover">
		<mkdir dir="${publish.dir.ndoc}" />

		<echo message="deploying binaries to ndoc folder" />

		<copy todir="${publish.dir.ndoc}" includeemptydirs="false">
			<fileset basedir="Subtext.Web">
				<include name="bin/*.xml" />
				<include name="bin/*.dll" />
			</fileset>
		</copy>
	</target>


	<target name="dist.archive" depends="dist.publish.latest">
		<mkdir dir="${publish.dir.archive}" />
		<zip zipfile="${publish.dir.archive}\${fileLabel}.zip">
			<fileset basedir="${publish.dir.latest}">
				<include name="**/*" />
				<exclude name="**/*.pdb" />
			</fileset>
		</zip>
		<delete dir="${publish.dir.latest}" failonerror="false" />
	</target>

	<!--
		Generates the NDoc documentation.
	-->
	<target name="document" depends="dist.publish.ndoc">
		<property name="configuration" value="documentation"/>
		<property name="ndoc.file.name" value="CodeDocumentation" />

		<echo message="Building xml comment files in ${publish.dir.latest}" />	
		
		<ndoc>
			<assemblies basedir="${publish.dir.ndoc}">
				<include name="Subtext.BlogMl.dll" />
				<include name="Subtext.Framework.dll" />
				<include name="Subtext.Web.dll" />
				<include name="Subtext.Extensibility.dll" />
				<include name="Subtext.Installation.dll" />
				<include name="Subtext.Web.Controls.dll" />
			</assemblies>
			<documenters>
				<documenter name="MSDN">
					<property name="OutputDirectory" value="${ndoc.output.dir}" />
					<property name="HtmlHelpName" value="${ndoc.file.name}" />
					<property name="HtmlHelpCompilerFilename" value="hhc.exe" />
					<property name="Title" value="Subtext Code Documentation" />
					<property name="CopyrightText" value="Copyright 2005-2006 Phil Haack" />
					<property name="CopyrightHref" value="" />
					<property name="UseNamespaceDocSummaries" value="True" />
				</documenter>
			</documenters>
		</ndoc>
		
		<copy file="${ndoc.output.dir}\${ndoc.file.name}.chm" todir="${docs.root.dir}" />
		<delete dir="${ndoc.output.dir}" />
		<delete dir="${publish.dir.ndoc}" />
	</target>
</project>