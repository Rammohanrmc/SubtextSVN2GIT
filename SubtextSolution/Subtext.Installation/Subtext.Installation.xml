<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Subtext.Installation</name>
    </assembly>
    <members>
        <member name="T:Subtext.Installation.Import.DotText095ImportProvider">
            <summary>
            Imports blog data from a .TEXT 0.95 database.
            </summary>
        </member>
        <member name="M:Subtext.Installation.Import.DotText095ImportProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes this import provider.
            </summary>
            <param name="name">Name.</param>
            <param name="configValue">Config value.</param>
        </member>
        <member name="M:Subtext.Installation.Import.DotText095ImportProvider.GatherImportInformation">
            <summary>
            <p>
            This method is called by the import engine in order to ask the 
            provider what pieces of information it needs from the user in order 
            to proceed with the import.
            </p>
            <p>
            This method returns a <see cref="T:System.Web.UI.Control"/> used to gather 
            the required installation information.  This control will be returned 
            back to the provider after the user provides the information.
            </p>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Subtext.Installation.Import.DotText095ImportProvider.Import(System.Web.UI.Control)">
            <summary>
            Provides the import information as provided by the user back 
            into the import provider. 
            The control passed in should be the same as that provided in 
            <see cref="M:Subtext.Installation.Import.DotText095ImportProvider.GatherImportInformation"/>, but with user values 
            supplied within it.
            </summary>
            <param name="populatedControl">Populated control.</param>
        </member>
        <member name="M:Subtext.Installation.Import.DotText095ImportProvider.ValidateImportInformation(System.Web.UI.Control)">
            <summary>
            Validates the installation information provided by the user.  
            Returns a string with an explanation of why it is incorrect.
            </summary>
            <param name="populatedControl">control used to provide information.</param>
            <returns></returns>
        </member>
        <member name="T:Subtext.Installation.ScriptHelper">
            <summary>
            Helper class used to execute SQL Scripts.
            </summary>
        </member>
        <member name="M:Subtext.Installation.ScriptHelper.ExecuteScript(System.String,System.Data.SqlClient.SqlTransaction)">
            <summary>
            Executes the script.
            </summary>
            <remarks>
            Use script.Execute(transaction) to do the work. We will also pull the
            status of our script exection from here.
            </remarks>
            <param name="scriptName">Name of the script.</param>
            <param name="transaction">The current transaction.</param>
        </member>
        <member name="M:Subtext.Installation.ScriptHelper.ExecuteScript(Subtext.Scripting.ScriptCollection,System.Data.SqlClient.SqlTransaction)">
            <summary>
            Executes the script.
            </summary>
            <remarks>
            Use script.Execute(transaction) to do the work. We will also pull the
            status of our script exection from here.
            </remarks>
            <param name="scripts">The collection of scripts to execute.</param>
            <param name="transaction">The current transaction.</param>
        </member>
        <member name="M:Subtext.Installation.ScriptHelper.UnpackEmbeddedScriptAsString(System.String)">
            <summary>
            Unpacks an embedded script into a string.
            </summary>
            <param name="scriptName">The file name of the script to run.</param>
        </member>
        <member name="M:Subtext.Installation.ScriptHelper.UnpackEmbeddedScript(System.String)">
            <summary>
            Unpacks an embedded script into a Stream.
            </summary>
            <param name="scriptName">Name of the script.</param>
        </member>
        <member name="T:Subtext.Installation.SqlInstallationProvider">
            <summary>
            Summary description for SqlInstallationProvider.
            </summary>
        </member>
        <member name="M:Subtext.Installation.SqlInstallationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the specified provider.
            </summary>
            <param name="name">Friendly Name of the provider.</param>
            <param name="configValue">Config value.</param>
        </member>
        <member name="M:Subtext.Installation.SqlInstallationProvider.GatherInstallationInformation">
            <summary>
            <p>
            This method is called by the installation engine in order to ask the 
            provider what pieces of information it needs from the user in order 
            to proceed with the installation.
            </p>
            <p>
            This method returns the <see cref="T:System.Web.UI.Control"/> used to gather 
            the required installation information.  This will be returned 
            back to the provider after the user provides the information.
            </p>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Subtext.Installation.SqlInstallationProvider.ProvideInstallationInformation(System.Web.UI.Control)">
            <summary>
            Provides the installation information as provided by the user. 
            The control passed in should be the same as that provided in 
            <see cref="M:Subtext.Installation.SqlInstallationProvider.GatherInstallationInformation"/>, but with user values 
            supplied within it.
            </summary>
            <param name="populatedControl">Populated control.</param>
        </member>
        <member name="M:Subtext.Installation.SqlInstallationProvider.ValidateInstallationInformation(System.Web.UI.Control)">
            <summary>
            Validates the installation information provided by the user.  
            Returns a NameValueCollection of any fields that are incorrect 
            with an explanation of why it is incorrect.
            </summary>
            <param name="control">Information.</param>
            <returns></returns>
        </member>
        <member name="M:Subtext.Installation.SqlInstallationProvider.GetInstallationStatus(System.Version)">
            <summary>
            Gets the installation status based on the current assembly Version.
            </summary>
            <param name="currentAssemblyVersion">The version of the assembly that represents this installation.</param>
            <returns></returns>
        </member>
        <member name="M:Subtext.Installation.SqlInstallationProvider.IsInstallationException(System.Exception)">
            <summary>
            Determines whether the specified exception is due to 
            a problem with the installation.
            </summary>
            <param name="exception">exception.</param>
            <returns>
            	<c>true</c> if this is an installation exception; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Subtext.Installation.SqlInstallationProvider.Upgrade(System.Version)">
            <summary>
            Upgrades this instance. Returns true if it was successful.
            </summary>
            <param name="assemblyVersion">Version of the assembly upgrading to.</param>
            <returns></returns>
        </member>
        <member name="M:Subtext.Installation.SqlInstallationProvider.Install(System.Version)">
            <summary>
            Installs this instance.  Returns true if it was successful.
            </summary>
            <param name="assemblyVersion">The version of the assembly being installed.</param>
            <returns></returns>
        </member>
        <member name="M:Subtext.Installation.SqlInstallationProvider.GetCurrentInstalledVersion">
            <summary>
            Gets the <see cref="T:System.Version"/> of the current Subtext installation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Subtext.Installation.SqlInstallationProvider.UpdateCurrentInstalledVersion(System.Version,System.Data.SqlClient.SqlTransaction)">
            <summary>
            Updates the value of the current installed version within the subtext_Version table.
            </summary>
            <param name="newVersion">New version.</param>
        </member>
        <member name="M:Subtext.Installation.SqlInstallationProvider.Repair">
            <summary>
            Attempts to repair this instance. Returns true if it was successful.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Subtext.Installation.SqlInstallationProvider.Name">
            <summary>
            Returns the friendly name of the provider when the provider is initialized.
            </summary>
            <value></value>
        </member>
        <member name="P:Subtext.Installation.SqlInstallationProvider.CurrentAssemblyVersion">
            <summary>
            Gets the framework version.
            </summary>
            <value></value>
        </member>
        <member name="P:Subtext.Installation.SqlInstallationProvider.NeedsUpgrade">
            <summary>
            Gets a value indicating whether the subtext installation needs an upgrade 
            to occur.
            </summary>
            <value>
            	<c>true</c> if [needs upgrade]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Subtext.Installation.SqlInstallationProvider.VersionTableExists">
            <summary>
            Gets or sets a value indicating whether the blog content table exists.
            </summary>
            <value>
            	<c>true</c> if the blog content table exists; otherwise, <c>false</c>.
            </value>
        </member>
    </members>
</doc>
